{% extends 'base.html.twig' %}

{% block title %}Composition de Brawlers{% endblock %}

{% block body %}
<div class="container mt-5">
    <h1 class="text-center mb-4">Composition de Brawlers</h1>

    <!-- Zones de composition -->
    <div class="d-flex justify-content-between mb-4">
        {% for i in 1..3 %}
            <div class="dropzone rounded p-2 shadow-lg text-center" data-zone="{{ i }}" style="width: 30%; min-height: 150px;">
                <div class="zone-content"></div>
            </div>
        {% endfor %}
    </div>

    <!-- Liste des Brawlers -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-5 row-cols-lg-10 g-3">
        {% for brawler in brawlers.items %}
            <div class="col">
                <div class="card h-100 shadow-sm draggable" draggable="true" data-id="{{ brawler.id }}" data-name="{{ brawler.name }}" style="min-width: 100px; max-width: 120px;">
                    <img 
                        src="{{ asset('images/brawlers/' ~ brawler.name|lower ~ '_portrait.png') }}" 
                        class="card-img-top" 
                        alt="{{ brawler.name }}"
                        onerror="this.onerror=null;this.src='{{ asset('images/brawlers/default.png') }}';"
                        style="height: 80px; object-fit: cover;">
                    
                    <div class="card-body text-center p-2">
                        <h6 class="card-title text-uppercase fw-bold" style="font-size: 0.8rem;">{{ brawler.name }}</h6>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
</div>

<!-- Script pour le Drag-and-Drop -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const draggables = document.querySelectorAll('.draggable');
        const dropzones = document.querySelectorAll('.dropzone');

        draggables.forEach(draggable => {
            draggable.addEventListener('dragstart', () => {
                draggable.classList.add('dragging');
            });

            draggable.addEventListener('dragend', () => {
                draggable.classList.remove('dragging');
            });
        });

        dropzones.forEach(zone => {
            zone.addEventListener('dragover', e => {
                e.preventDefault();
                if (zone.querySelector('.card') === null) {
                    const dragging = document.querySelector('.dragging');
                    zone.querySelector('.zone-content').appendChild(dragging);
                }
            });

            zone.addEventListener('click', e => {
                const card = zone.querySelector('.card');
                if (card) {
                    document.querySelector('.row').appendChild(card);
                }
            });
        });
    });
</script>

<!-- Styles supplÃ©mentaires -->
<style>
    .card {
        border-radius: 8px;
    }
    .dropzone {
        border: 2px dashed #ccc;
        transition: background-color 0.3s ease;
    }
    .dropzone:hover {
        background-color: #f8f9fa;
    }
    .dropzone .zone-content .card {
        margin: 0 auto;
    }
</style>
{% endblock %}
